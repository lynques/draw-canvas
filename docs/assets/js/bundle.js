!function(t){var e={};function s(i){if(e[i])return e[i].exports;var n=e[i]={i:i,l:!1,exports:{}};return t[i].call(n.exports,n,n.exports,s),n.l=!0,n.exports}s.m=t,s.c=e,s.d=function(t,e,i){s.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:i})},s.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return s.d(e,"a",e),e},s.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},s.p="",s(s.s=0)}([function(t,e,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=s(1);customElements.define("draw-canvas",i.a)},function(t,e,s){"use strict";var i=s(2);e.a=class extends HTMLElement{constructor(){super(),this._strokeColor="#000",this._strokeWeight=1,this.canvas=null,this.ctx=null,this.drawing=!1}set strokeColor(t){this.setAttribute("stroke-color",t)}set strokeWeight(t){this.setAttribute("stroke-weight",t)}static get observedAttributes(){return["stroke-color","stroke-weight"]}attributeChangedCallback(t,e,s){switch(t){case"stroke-color":this._strokeColor=s;break;case"stroke-weight":const e=parseInt(s,10)||1;this._strokeWeight=e<1?1:e}}connectedCallback(){const t=document.createElement("style"),e=this.attachShadow({mode:"open"});t.textContent="draw-canvas { display: block; overflow: hidden; }",this.appendChild(t),this.canvas=document.createElement("canvas"),e.appendChild(this.canvas),this.init()}init(){this.ctx=this.canvas.getContext("2d"),this.canvas.addEventListener("mousedown",this.handleMouseDown.bind(this)),this.canvas.addEventListener("mousemove",this.handleMouseMove.bind(this)),this.canvas.addEventListener("mouseout",this.handleMouseUp.bind(this)),this.canvas.addEventListener("mouseup",this.handleMouseUp.bind(this)),this.canvas.width=this.clientWidth,this.canvas.height=this.clientHeight,this.service=new i.a(this,this.canvas,this.ctx)}handleMouseDown(t){const e=t.offsetX,s=t.offsetY;this.drawing=!0,this.ctx.strokeStyle=this._strokeColor,this.ctx.lineWidth=this._strokeWeight,this.ctx.beginPath(),this.ctx.moveTo(e,s)}handleMouseMove(t){if(this.drawing){const e=t.offsetX,s=t.offsetY;this.ctx.lineTo(e,s),this.ctx.stroke()}}handleMouseUp(){this.drawing=!1}clear(){this.ctx.fillStyle="#fff",this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height),this.service&&this.service.size()}}},function(t,e,s){"use strict";e.a=class{constructor(t,e,s){this.prevWidth=0,this.prevHeight=0,this.component=t,this.canvas=e,this.ctx=s,requestAnimationFrame(this.resize.bind(this))}size(){this.prevWidth=this.component.clientWidth,this.prevHeight=this.component.clientHeight,this.canvas.width=this.prevWidth,this.canvas.height=this.prevHeight}resize(){if(this.prevWidth-this.component.clientWidth<0||this.prevHeight-this.component.clientHeight<0){let t;this.prevWidth>0&&(t=this.ctx.getImageData(0,0,this.prevWidth,this.prevHeight)),this.size(),t&&this.ctx.putImageData(t,0,0)}requestAnimationFrame(this.resize.bind(this))}}}]);
//# sourceMappingURL=bundle.js.map